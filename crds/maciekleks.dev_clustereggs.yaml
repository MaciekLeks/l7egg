---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.1
  name: clustereggs.maciekleks.dev
spec:
  group: maciekleks.dev
  names:
    kind: ClusterEgg
    listKind: ClusterEggList
    plural: clustereggs
    singular: clusteregg
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.ready
      name: Ready
      type: boolean
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              egress:
                properties:
                  cidrs:
                    items:
                      type: string
                    type: array
                  commonNames:
                    items:
                      type: string
                    type: array
                  interfaceName:
                    maxLength: 32
                    type: string
                    x-kubernetes-validations:
                    - message: interfaceName is immutable
                      rule: self == oldSelf
                  podSelector:
                    description: A label selector is a label query over a set of resources.
                      The result of matchLabels and matchExpressions are ANDed. An
                      empty label selector matches all objects. A null label selector
                      matches no objects.
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector
                          requirements. The requirements are ANDed.
                        items:
                          description: A label selector requirement is a selector
                            that contains values, a key, and an operator that relates
                            the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector
                                applies to.
                              type: string
                            operator:
                              description: operator represents a key's relationship
                                to a set of values. Valid operators are In, NotIn,
                                Exists and DoesNotExist.
                              type: string
                            values:
                              description: values is an array of string values. If
                                the operator is In or NotIn, the values array must
                                be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced
                                during a strategic merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: matchLabels is a map of {key,value} pairs. A
                          single {key,value} in the matchLabels map is equivalent
                          to an element of matchExpressions, whose key field is "key",
                          the operator is "In", and the values array contains only
                          "value". The requirements are ANDed.
                        type: object
                    type: object
                    x-kubernetes-map-type: atomic
                  shaping:
                    properties:
                      rate:
                        pattern: ^\d+[k|m]bps$
                        type: string
                    type: object
                    x-kubernetes-validations:
                    - message: shaping is immutable in this version
                      rule: self == oldSelf
                type: object
              ingress:
                properties:
                  interfaceName:
                    maxLength: 32
                    type: string
                    x-kubernetes-validations:
                    - message: interfaceName is immutable
                      rule: self == oldSelf
                type: object
              programType:
                default: cgroup
                enum:
                - tc
                - cgroup
                type: string
                x-kubernetes-validations:
                - message: attachType is immutable
                  rule: self == oldSelf
            type: object
            x-kubernetes-validations:
            - message: Egress interfaceName is needed if attachType is 'tc'
              rule: (self.programType == 'tc' && has(self.egress.interfaceName)) ||
                (self.programType == 'cgroup' && !has(self.egress.interfaceName))
            - message: Ingress interfaceName is needed if attachType is 'tc'
              rule: (self.programType == 'tc' && has(self.ingress.interfaceName))
                || (self.programType =='cgroup' && !has(self.ingress.interfaceName))
          status:
            properties:
              ready:
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
